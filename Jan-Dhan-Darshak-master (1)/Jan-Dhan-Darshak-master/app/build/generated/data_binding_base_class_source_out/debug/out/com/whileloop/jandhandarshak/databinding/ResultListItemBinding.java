// Generated by view binder compiler. Do not edit!
package com.whileloop.jandhandarshak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.whileloop.jandhandarshak.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResultListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView resultAddress;

  @NonNull
  public final ImageButton resultAudio;

  @NonNull
  public final ImageButton resultDetail;

  @NonNull
  public final LinearLayout resultItem;

  @NonNull
  public final TextView resultName;

  private ResultListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView resultAddress,
      @NonNull ImageButton resultAudio, @NonNull ImageButton resultDetail,
      @NonNull LinearLayout resultItem, @NonNull TextView resultName) {
    this.rootView = rootView;
    this.resultAddress = resultAddress;
    this.resultAudio = resultAudio;
    this.resultDetail = resultDetail;
    this.resultItem = resultItem;
    this.resultName = resultName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ResultListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResultListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.result_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResultListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.result_address;
      TextView resultAddress = ViewBindings.findChildViewById(rootView, id);
      if (resultAddress == null) {
        break missingId;
      }

      id = R.id.result_audio;
      ImageButton resultAudio = ViewBindings.findChildViewById(rootView, id);
      if (resultAudio == null) {
        break missingId;
      }

      id = R.id.result_detail;
      ImageButton resultDetail = ViewBindings.findChildViewById(rootView, id);
      if (resultDetail == null) {
        break missingId;
      }

      id = R.id.resultItem;
      LinearLayout resultItem = ViewBindings.findChildViewById(rootView, id);
      if (resultItem == null) {
        break missingId;
      }

      id = R.id.result_name;
      TextView resultName = ViewBindings.findChildViewById(rootView, id);
      if (resultName == null) {
        break missingId;
      }

      return new ResultListItemBinding((LinearLayout) rootView, resultAddress, resultAudio,
          resultDetail, resultItem, resultName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
